@inject NavigationManager navigationManager;
@inject AuthenticationStateProvider authenticationStateProvider

@inherits LayoutComponentBase

<MudThemeProvider Theme="LightTheme.GetTheme()"/>
<MudPopoverProvider />
<MudDialogProvider/>
<MudSnackbarProvider/>

<PageTitle>ASBNApp</PageTitle>


<MudLayout>
    <NavBar />
    <MudMainContent>
        <CascadingAuthenticationState>
            @if (!_isLoading)
            {
                @Body
            }
            else
            {
                <CheckingAuthentication />
            }
        </CascadingAuthenticationState>
    </MudMainContent>
</MudLayout>



@code{
    private bool _isLoading = true;

    /// <summary>
    /// Redirect the user to the login page if he's not logged in.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();

        if (authState.User.Identity.IsAuthenticated)
        {
            // Redirect if user is on index page, but authenticated
            if (navigationManager.Uri.EndsWith("/"))
            {
                navigationManager.NavigateTo("/app");
            }
        }
        else
        {
            // Redirect if user is on a protected page, but not authenticated
            if (navigationManager.Uri.EndsWith("/login") || navigationManager.Uri.EndsWith("/register") || navigationManager.Uri.EndsWith("/"))
            {
                // do nothing
            } 
            else
            {
                navigationManager.NavigateTo("/");
            }
        }

        _isLoading = false;
    }
}