@* Simple component to select a location. *@

@using ASBNApp.Frontend.Interfaces
@using ASBNApp.Frontend.Models

@inject IASBNDataService dataService;


@if (WorkLocationHours == null)
{
    <MudStack Row>
        <MudSkeleton Width="33%" Height="50px" />
        <MudSkeleton Width="33%" Height="50px" />
        <MudSkeleton Width="33%" Height="50px" />
    </MudStack>
}
else if (WorkLocationHours.Count == 0)
{
    <MudAlert Severity="Severity.Warning" Dense="true">
        No data available, please add new work location in settings.
        <MudLink Href="settings" Underline="Underline.Always" Typo="Typo.body2">Settings Page</MudLink>
    </MudAlert>
}
else if (WorkLocationHours.Count != 0)
{
    <MudChipSet T="WorkLocation" @bind-SelectedValue="SelectedLocation" Variant="Variant.Text" Mandatory>
        @foreach(var location in WorkLocationHours) {
            <MudChip Value="@location" Color="Color.Primary" Text="@location.LocationName" 
                @onclick="@(e => { SelectedLocationChanged.InvokeAsync(SelectedLocation); })" />
        }
    </MudChipSet>
}


@code {
    [Parameter]
    public WorkLocation? SelectedLocation { get; set; }

    [Parameter]
    public EventCallback<WorkLocation?> SelectedLocationChanged { get; set; }

    [Parameter]
    public List<WorkLocation>? WorkLocationHours { get; set; }
}