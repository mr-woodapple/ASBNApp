@* Simple component to select a location. *@

@using ASBNApp.Frontend.Interfaces
@using ASBNApp.Frontend.Models

@inject IASBNDataService dataService;


<Condition Evaluation="WorkLocationHours == null">
    <Match>
        <MudStack Row>
            <MudSkeleton Width="33%" Height="50px" />
            <MudSkeleton Width="33%" Height="50px" />
            <MudSkeleton Width="33%" Height="50px" />
        </MudStack>
    </Match>
    <NotMatch>
        <Condition Evaluation="WorkLocationHours.Count == 0">
            <Match>
                <MudAlert Severity="Severity.Warning" Dense="true">
                    No data available, please add new work location in settings.
                    <MudLink Href="settings" Underline="Underline.Always" Typo="Typo.body2">Settings Page</MudLink>
                </MudAlert>
            </Match>
            <NotMatch>
                <MudChipSet T="WorkLocation" @bind-SelectedValue="SelectedLocation" Variant="Variant.Text" Mandatory>
                    <Iterations Items="WorkLocationHours">
                        <MudChip Value="@context" Color="Color.Primary" Text="@context.LocationName"
                                 @onclick="@(e => SelectedLocationChanged.InvokeAsync(SelectedLocation))" />
                    </Iterations>
                </MudChipSet>
            </NotMatch>
        </Condition>
    </NotMatch>
</Condition>

@code {
    [Parameter]
    public WorkLocation? SelectedLocation { get; set; }

    [Parameter]
    public EventCallback<WorkLocation?> SelectedLocationChanged { get; set; }

    [Parameter]
    public List<WorkLocation>? WorkLocationHours { get; set; }
}