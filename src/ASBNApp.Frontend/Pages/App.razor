@page "/app"

@using ASBNApp.Frontend.Services;
@using ASBNApp.Frontend.Interfaces

@inject IDialogService dialogService;
@inject IUnsavedContentDialogService unsavedContentDialogService;


<PageTitle>Start</PageTitle>

<MudContainer Class="mt-5" MaxWidth="MaxWidth.ExtraExtraLarge">

    @* Header space *@
    <MudItem>
        <MudItem Elevation="0" Class="my-10">
            <MudText Typo="Typo.h3" Class="mb-5">Let's see what you've been up to!</MudText>
            <MudText Typo="Typo.subtitle1">What do you wanna log?</MudText>
        </MudItem>

        <MudTabs @ref="_tabs" OnPreviewInteraction="SwitchView">
            <MudTabPanel Text="Day" Icon="@Icons.Material.Filled.ViewDay" 
                ToolTip="Single day view, no distraction."  />

            <MudTabPanel Text="Week" Icon="@Icons.Material.Filled.ViewWeek"
                ToolTip="The full week at a glance!" />
        </MudTabs>
    </MudItem>

    @if (_tabs?.ActivePanelIndex == null || _tabs?.ActivePanelIndex == 0) 
    {
        <MainViewDay />
    } 
    else
    {
        <MainViewWeek />
    }
</MudContainer>


@code {
    private bool IsDayBool = true;
    private MudTabs? _tabs;

    /// <summary>
    /// Called when the user clicks on a tab.
    /// Then checks if we need to display a warning for unsaved data.
    /// </summary>
    private async Task SwitchView(TabInteractionEventArgs args)
    {
        if (args.PanelIndex == 1)
        {
            if (!unsavedContentDialogService.IsDayViewDataSaved)
            {
                var isDialogCancelled = await OpenConfirmationDialogAsync();
                if (isDialogCancelled)
                {
                    // Do nothing, stay on the current view
                    args.Cancel = true;
                    return;
                }
            }
        }

        if (args.PanelIndex == 0)
        {
            if (!unsavedContentDialogService.IsWeekViewDataSaved)
            {
                var isDialogCancelled = await OpenConfirmationDialogAsync();
                if (isDialogCancelled)
                {
                    // Do nothing, stay on the current view
                    args.Cancel = true;
                    return;
                }
            }
        }

        StateHasChanged();
    }

    /// <summary>
    /// Creates the dialog, specifies the text and buttons to show.
    /// </summary>
    /// <returns>Bool representing if the dialog was cancelled or not.</returns>
    private async Task<bool> OpenConfirmationDialogAsync()
    {
        var parameters = new DialogParameters<DialogTemplate>
        {
            { x => x.ContentText, $"You have unsaved data in the current tab. If you switch views, your data will be lost. To save your data first, click 'Cancel'." },
            { x => x.ButtonText, "Switch views anyway" },
            { x => x.Color, Color.Error }
        };
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = await dialogService.ShowAsync<DialogTemplate>("Unsaved data - continue?", parameters, options);
        var result = await dialog.Result;
        return result.Canceled;
    }
}