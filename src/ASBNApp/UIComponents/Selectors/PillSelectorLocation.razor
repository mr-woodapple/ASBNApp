@* 
Simple component to select a location, should get it's values from the database at some point. 
*@

@using ASBNApp.Model;
@inject IASBNDataService dataService;

@if(dataService.GetWorkLocationHours().Count != 0) {
    @* <MudChipSet @bind-SelectedChip="selectedChip" Filter="true" Mandatory="true"> *@
    <MudChipSet @bind-SelectedChip="selectedChip" Filter="true" Mandatory="true">
        @foreach (var entry in dataService.GetWorkLocationHours())
        {
            <MudChip Text="@entry.Location" Color="Color.Primary"
                @onclick="@(e => { SelectedLocation = entry.Location; SelectedLocationChanged.InvokeAsync(SelectedLocation); })" /> 
        }
    </MudChipSet>
}
else
{
    <MudAlert Severity="Severity.Info" Dense="true">
        No data available, please add new work location in settings.
    </MudAlert>
}


@code {
    [Parameter]
    public string? SelectedLocation { get; set; }

    [Parameter]
    public EventCallback<string?> SelectedLocationChanged { get; set; }

    private MudChip selectedChip { get; set; }
    private List<MudChip> availableChips { get; set; } = new();


    protected override void OnInitialized()
    {
        // create an array with all chips
        foreach (var entry in dataService.GetWorkLocationHours())
        {
            availableChips.Add(new MudChip() { Text = entry.Location });
        }

        // filter the one where the text matches the SelectedLocation string
        selectedChip = availableChips.Single(e => e.Text == SelectedLocation);

        //TODO: Fix this
    }
}
