@*
Simple component to show text & let's the user edit it after clicking a button
*@

<div class="container show-edit-text">

    @if (_isEdit)
    {
        @* edit text mode *@
        <div class="row edit-text-row">
            <div class="col-5">
                <input type="text" class="input-underline p-1" placeholder="@Placeholder" @bind="InputValue" />
            </div>
            <div class="col-1">
                <span tabindex="0" class="btn material-symbols-rounded p-0" @onclick="@(e => { _isEdit = false; InputValueChanged.InvokeAsync(InputValue); })">
                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="m382-354 339-339q12-12 28.5-12t28.5 12q12 12 12 28.5T778-636L410-268q-12 12-28 12t-28-12L182-440q-12-12-11.5-28.5T183-497q12-12 28.5-12t28.5 12l142 143Z"/></svg>
                </span>
            </div>
        </div>
    }
    else
    {
        @* Show text mode *@
        <div class="row">
            <div class="col-5">
                <div class="show-text">
                    @if(InputValue == null) { <p class="m-0 p-1 px-2"><i> @Placeholder </i></p> } 
                    else { <p class="m-0 p-1 px-2"> @InputValue </p> }
                </div>
            </div>
            <div class="col-1">
                @* Set focus to the input above *@
                <span tabindex="0" class="btn p-0 material-symbols-rounded" @onclick="@(e => { _isEdit = true; })">
                    <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M200-200h57l391-391-57-57-391 391v57Zm-40 80q-17 0-28.5-11.5T120-160v-97q0-16 6-30.5t17-25.5l505-504q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L313-143q-11 11-25.5 17t-30.5 6h-97Zm600-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z" /></svg>
                </span>
            </div>
        </div>
    }
    
</div>


@code {
    // Variable to store the editing state in
    private bool _isEdit = false;

    // Placeholder variable to be set in the parent component
    [Parameter]
    public string? Placeholder { get; set; }

    // Two way binding parameters
    [Parameter]
    public string? InputValue { get; set; }
    [Parameter]
    public EventCallback<string> InputValueChanged { get; set; }
}