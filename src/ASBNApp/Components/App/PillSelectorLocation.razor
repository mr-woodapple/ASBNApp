@* Simple component to select a location, should get it's values from the database at some point. *@

@using ASBNApp.Model;
@inject IASBNDataService dataService;

@if(dataService.GetWorkLocationHours().Count != 0) {
    <MudChipSet @bind-SelectedChip="selectedChip" Filter="true" Mandatory="true">
        @foreach (var entry in dataService.GetWorkLocationHours())
        {
            <MudChip @ref=ChipRef Text="@entry.Location" Color="Color.Primary"
                     @onclick="@(e => { SelectedLocation = entry.Location; SelectedLocationChanged.InvokeAsync(SelectedLocation); })" /> 
        }
    </MudChipSet>
}
else
{
    <MudAlert Severity="Severity.Warning" Dense="true">
        No data available, please add new work location in settings.
        <MudLink Href="settings" Underline="Underline.Always" Typo="Typo.body2">Settings Page</MudLink>
    </MudAlert>
}


@code {
    private string? _selectedLocation;
    [Parameter]
    public string? SelectedLocation 
    { 
        get => _selectedLocation; 
        set {
            _selectedLocation = value;
            UpdateSelectedChip();
        } 
    }
    [Parameter]
    public EventCallback<string?> SelectedLocationChanged { get; set; }

    private MudChip? selectedChip { get; set; }
    private MudChip ChipRef { set => availableChips.Add(value); }
    private List<MudChip> availableChips { get; set; } = new();

    // Run this on component initialzing to pre-set the selected chip
    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender) return;

        UpdateSelectedChip();
        StateHasChanged();
    }

    // Handle updating the selected chip, as well as edge cases as the items not being loaded yet
    // or no item set
    private void UpdateSelectedChip() 
    {
        if (availableChips.Count != 0) 
        {
            try
            {
                selectedChip = availableChips.Single(e => e.Text == _selectedLocation);
            }
            catch (InvalidOperationException e)
            {
                selectedChip = null;
            }
        }
    }
}
