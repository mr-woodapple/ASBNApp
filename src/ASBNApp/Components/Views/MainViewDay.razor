@* Main view to input and edit data, displayed when the user selects the daily view. *@

@inject IASBNDataService dataService;
@inject ISnackbar Snackbar

<MudPaper Outlined="true" Class="mt-5 pa-5">
    <MudGrid>

        @* Select date *@
        <MudItem xs="12">
            <MudText Typo="Typo.body2">I'm writing a log for...</MudText>
            <PillSelectorDate @bind-SelectedDate="SelectedDate" />
        </MudItem>

        @* Select location *@
        <MudItem xs="6">
            <MudText Typo="Typo.body2">I was working from...</MudText>
            <PillSelectorLocation @bind-SelectedLocation="SelectedLocation" />
        </MudItem>
        <MudItem xs="6">
            <MudNumericField @bind-Value="Hours" Variant="Variant.Text" Label="I worked for..." Min="0" Format="N1" />
        </MudItem>

        @* Add note and save *@
        <MudItem xs="12">
            <MudTextField Text="@Note" T="string" Label="And I learned this today:" AutoGrow MaxLines="5"/>
        </MudItem>
        <MudItem xs="12">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveData">Save</MudButton>
        </MudItem>

    </MudGrid>
</MudPaper>


@code {
    // Variables to bind the selected Date to
    private DateTime _selectedDate;
    public DateTime SelectedDate
    {
        get => _selectedDate;
        set
        {
            if (value != _selectedDate)
            {
                _selectedDate = value;
                GetDataFromDate();
                Console.WriteLine("MainViewDay: Selected date changed!");
            }
        }
    }

    // Variables to bind the selected work location to
    private string? _selectedLocation = null;
    public string? SelectedLocation
    {
        get => _selectedLocation;
        set
        {
            if (value != _selectedLocation)
            {
                _selectedLocation = value;
                UpdateWorkHoursFromLocation();
            }
        }
    }

    // Variable to bind the user input for work hours to
    public float? Hours = null;

    // Variable for storing the text the user put in
    public string? Note = null;

    /// <summary>
    /// Pre-set the value for hours worked for the UI based on the
    /// selected workLocationHours element.
    /// </summary>
    public void UpdateWorkHoursFromLocation()
    {
        // filter list for the matching string in SelectedLocation
        // set corresponding hours value to Hours
        foreach (var entry in dataService.GetWorkLocationHours())
        {
            if (entry.Location == SelectedLocation) { Hours = entry.Hours; }
        }
    }

    /// <summary>
    /// Gets data for the value in SelectedDate
    /// </summary>
    public async void GetDataFromDate()
    {
        // Check if data present, if not create an empty EntryRowModel
        var retrievedData = dataService.GetDay(SelectedDate);
        Console.WriteLine($"retrievedData for {SelectedDate} = ", retrievedData);

        // Set variables
        Note = retrievedData.Note;
        Hours = retrievedData.Hours;
        SelectedLocation = retrievedData.Location;
    }

    /// <summary>
    /// Triggers the DataService to save the edited data, also trigger
    /// alert with matching information.
    /// </summary>
    public async void SaveData()
    {
        // why do I have to convert Hours at all? its a nullable on both ends...
        if (await dataService.SaveDay(Note, SelectedDate, SelectedLocation, (float)Hours)) 
        {
            Snackbar.Add("That's your data saved!", Severity.Success);
        }
        else 
        {
            Snackbar.Add("There was an error saving you data - please allow saving changes if prompted.", Severity.Error);
        }
    }
}